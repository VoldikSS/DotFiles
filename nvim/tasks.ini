# vim: set fenc=utf-8 ft=dosini:

# ============================================================================
#                            Start
# ============================================================================
[start]
command=:AsyncTask file-build-and-run

# ============================================================================
#                            Single file
# ============================================================================
[file-build]
command:c=gcc "$(VIM_FILEPATH)" -o "$(VIM_FILEDIR)/a.out"
command:cpp=g++ "$(VIM_FILEPATH)" -o "$(VIM_FILEDIR)/a.out"
command:go=go build $(VIM_FILEPATH)
command:rust=cargo build
cwd=$(VIM_FILEDIR)
output=quickfix
errorformat=%f:%l:%m
save=2

[file-run]
command:javascript=node "$(VIM_FILEPATH)"
command:lua=lua "$(VIM_FILEPATH)"
command:make=make -f "$(VIM_FILEPATH)"
command:python=python "$(VIM_FILEPATH)"
command:rust=cargo run
command:sh=sh "$(VIM_FILEPATH)"
cwd=$(VIM_FILEDIR)
output=terminal
save=2

[file-build-and-run]
command:c=gcc "$(VIM_FILEPATH)" -o "$(VIM_FILEDIR)/a.out" && "$(VIM_FILEDIR)/a.out"
command:cpp=g++ "$(VIM_FILEPATH)" -o "$(VIM_FILEDIR)/a.out" && "$(VIM_FILEDIR)/a.out"
command:javascript=node "$(VIM_FILEPATH)"
command:lua=lua "$(VIM_FILEPATH)"
command:make=make -f "$(VIM_FILEPATH)"
command:markdown=:MarkdownPreview
command:python=python "$(VIM_FILEPATH)"
command:rust=cargo run
command:sh=sh "$(VIM_FILEPATH)"
command:vim=:source %
cwd=$(VIM_FILEDIR)
output=terminal
save=2

# ============================================================================
#                                Cmake
# ============================================================================
# make sure g:asyncrun_rootmarkers includes `CMakeLists.txt`
# ----------------------------------------------------------------------------
[cmake-init]
command=mkdir -p build && cd build && cmake -DCMAKE_EXPORT_COMPILE_COMMANDS=YES .. && mv compile_commands.json ..
cwd=<root>
silent=1
save=2

[cmake-build]
command=cmake --build build
cwd=<root>
save=2

[cmake-run]
command="$(VIM_ROOT)/build/$(VIM_PRONAME)"
cwd=<root>
output=quickfix
silent=1
save=2

[cmake-build-and-run]
command=cmake --build build && "$(VIM_ROOT)"/build/"$(VIM_PRONAME)"
output=terminal
cwd=<root>
silent=1
save=2

[cmake-clean]
command=rm -rf "$(VIM_ROOT)"/build/*
cwd=<root>
silent=1

[cmake-reinit]
command=rm -rf "$(VIM_ROOT)"/build/ && mkdir -p build && cd build && cmake -DCMAKE_EXPORT_COMPILE_COMMANDS=YES .. && mv compile_commands.json ..
cwd=<root>
silent=1

# ============================================================================
#                                   MISC
# ============================================================================
[grep]
command=rg -n --no-heading --color never "$(?keyword)" "<root>" -tc -tcpp -tpy -tvim -tgo
cwd=$(VIM_ROOT)
errorformat=%f:%l:%m

[ctags]
command=ctags -R -f tags .
cwd=$(VIM_ROOT)
errorformat=
